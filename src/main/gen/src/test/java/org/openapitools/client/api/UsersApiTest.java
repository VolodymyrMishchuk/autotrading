/*
 * Autotrading Backend API
 * API for managing users (ROLE_SUPER-ADMIN, ROLE_ADMIN, ROLE_CUSTOMER), accounts, sources, transactions with email-confirmed registration and role-based access control. 
 *
 * The version of the OpenAPI document: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.util.UUID;
import org.openapitools.client.model.User;
import org.openapitools.client.model.UserUpdate;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UsersApi
 */
@Disabled
public class UsersApiTest {

    private final UsersApi api = new UsersApi();

    /**
     * Get all users
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersGetTest() throws ApiException {
        List<User> response = api.usersGet();
        // TODO: test validations
    }

    /**
     * Delete user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersIdDeleteTest() throws ApiException {
        UUID id = null;
        api.usersIdDelete(id);
        // TODO: test validations
    }

    /**
     * Get user by ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersIdGetTest() throws ApiException {
        UUID id = null;
        User response = api.usersIdGet(id);
        // TODO: test validations
    }

    /**
     * Update user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersIdPutTest() throws ApiException {
        UUID id = null;
        UserUpdate userUpdate = null;
        api.usersIdPut(id, userUpdate);
        // TODO: test validations
    }

}
