openapi: 3.0.3
info:
  description: |
    API for managing users (ROLE_SUPER-ADMIN, ROLE_ADMIN, ROLE_CUSTOMER), accounts, sources, transactions
    with email-confirmed registration and role-based access control.
  title: Autotrading Backend API
  version: 1.2.1
servers:
- description: Local Development Server
  url: https://localhost:8080
tags:
- description: Operations for sign up/in and registration flow
  name: Auth
- description: Operations for managing users (ROLE_CUSTOMER/ROLE_ADMIN/ROLE_SUPER-ADMIN)
  name: Users
- description: Operations with user accounts
  name: Accounts
- description: Signal sources for autotrading
  name: Sources
- description: Transactions related to accounts
  name: Transactions
paths:
  /auth/signup:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
        required: true
      responses:
        "201":
          description: User created successfully
        "400":
          description: Invalid input
      summary: Register new user
      tags:
      - Auth
      x-content-type: application/json
      x-accepts:
      - application/json
  /auth/login:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthLogin'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: Successful login
        "401":
          description: Unauthorized
      summary: Log in and receive JWT token
      tags:
      - Auth
      x-content-type: application/json
      x-accepts:
      - application/json
  /users:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: List of users
      security:
      - bearerAuth: []
      summary: Get all users
      tags:
      - Users
      x-accepts:
      - application/json
  /users/{id}:
    delete:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: User deleted
      security:
      - bearerAuth: []
      summary: Delete user
      tags:
      - Users
      x-accepts:
      - application/json
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: User found
        "404":
          description: User not found
      security:
      - bearerAuth: []
      summary: Get user by ID
      tags:
      - Users
      x-accepts:
      - application/json
    put:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
        required: true
      responses:
        "200":
          description: User updated
      security:
      - bearerAuth: []
      summary: Update user
      tags:
      - Users
      x-content-type: application/json
      x-accepts:
      - application/json
  /accounts:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Account'
                type: array
          description: List of accounts
      security:
      - bearerAuth: []
      summary: Get all accounts
      tags:
      - Accounts
      x-accepts:
      - application/json
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreate'
        required: true
      responses:
        "201":
          description: Account created
      security:
      - bearerAuth: []
      summary: Create new account
      tags:
      - Accounts
      x-content-type: application/json
      x-accepts:
      - application/json
  /accounts/{id}:
    delete:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Account deleted
      security:
      - bearerAuth: []
      summary: Delete account
      tags:
      - Accounts
      x-accepts:
      - application/json
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Account found
        "404":
          description: Account not found
      security:
      - bearerAuth: []
      summary: Get account by ID
      tags:
      - Accounts
      x-accepts:
      - application/json
    put:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdate'
        required: true
      responses:
        "200":
          description: Account updated
      security:
      - bearerAuth: []
      summary: Update account
      tags:
      - Accounts
      x-content-type: application/json
      x-accepts:
      - application/json
  /sources:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Source'
                type: array
          description: List of sources
      security:
      - bearerAuth: []
      summary: Get all sources
      tags:
      - Sources
      x-accepts:
      - application/json
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceCreate'
        required: true
      responses:
        "201":
          description: Source created
      security:
      - bearerAuth: []
      summary: Create source
      tags:
      - Sources
      x-content-type: application/json
      x-accepts:
      - application/json
  /sources/{id}:
    delete:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Source deleted
      security:
      - bearerAuth: []
      summary: Delete source
      tags:
      - Sources
      x-accepts:
      - application/json
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: Source found
        "404":
          description: Source not found
      security:
      - bearerAuth: []
      summary: Get source by ID
      tags:
      - Sources
      x-accepts:
      - application/json
    put:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceUpdate'
        required: true
      responses:
        "200":
          description: Source updated
      security:
      - bearerAuth: []
      summary: Update source
      tags:
      - Sources
      x-content-type: application/json
      x-accepts:
      - application/json
  /transactions:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Transaction'
                type: array
          description: List of transactions
      security:
      - bearerAuth: []
      summary: Get all transactions
      tags:
      - Transactions
      x-accepts:
      - application/json
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionCreate'
        required: true
      responses:
        "201":
          description: Transaction created
      security:
      - bearerAuth: []
      summary: Create transaction
      tags:
      - Transactions
      x-content-type: application/json
      x-accepts:
      - application/json
  /transactions/{id}:
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: Transaction found
        "404":
          description: Transaction not found
      security:
      - bearerAuth: []
      summary: Get transaction by ID
      tags:
      - Transactions
      x-accepts:
      - application/json
components:
  schemas:
    User:
      example:
        role: ROLE_CUSTOMER
        birth_date: 2000-01-23
        last_name: last_name
        phone_number: phone_number
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        first_name: first_name
        email: email
        status: ACTIVE
      properties:
        id:
          format: uuid
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          format: email
          type: string
        phone_number:
          type: string
        birth_date:
          format: date
          type: string
        role:
          enum:
          - ROLE_CUSTOMER
          - ROLE_ADMIN
          - ROLE_SUPER-ADMIN
          type: string
        status:
          enum:
          - ACTIVE
          - DEACTIVATED
          - PENDING_CONFIRMATION
          type: string
      type: object
    UserCreateRequest:
      example:
        password: password
        birth_date: 2000-01-23
        last_name: last_name
        phone_number: phone_number
        first_name: first_name
        email: email
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          format: email
          type: string
        phone_number:
          type: string
        birth_date:
          format: date
          type: string
        password:
          format: password
          type: string
      required:
      - birth_date
      - email
      - first_name
      - last_name
      - password
      - phone_number
      type: object
    UserUpdate:
      example:
        password: password
        role: ROLE_CUSTOMER
        birth_date: 2000-01-23
        last_name: last_name
        phone_number: phone_number
        first_name: first_name
        email: email
        status: ACTIVE
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          format: email
          type: string
        phone_number:
          type: string
        birth_date:
          format: date
          type: string
        role:
          enum:
          - ROLE_CUSTOMER
          - ROLE_ADMIN
          - ROLE_SUPER-ADMIN
          type: string
        status:
          enum:
          - ACTIVE
          - DEACTIVATED
          type: string
        password:
          format: password
          type: string
      type: object
    AuthLogin:
      example:
        password: password
        email: email
      properties:
        email:
          format: email
          type: string
        password:
          format: password
          type: string
      required:
      - email
      - password
      type: object
    AuthToken:
      example:
        access_token: access_token
        token_type: bearer
      properties:
        access_token:
          type: string
        token_type:
          default: bearer
          enum:
          - bearer
          type: string
      type: object
    Account:
      example:
        number: 6
        balance: 0.8008281904610115
        updated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        currency: currency
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        source_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        person_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status: ACTIVE
      properties:
        id:
          format: uuid
          type: string
        balance:
          format: double
          type: number
        currency:
          type: string
        number:
          description: Unique account number (e.g. MetaTrader ID)
          type: integer
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        person_id:
          format: uuid
          type: string
        source_id:
          format: uuid
          type: string
        status:
          enum:
          - ACTIVE
          - DEACTIVATED
          type: string
      type: object
    AccountCreate:
      example:
        token_MetaTradeAPI: token_MetaTradeAPI
        source_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        person_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        token_MetaTradeAPI:
          type: string
        source_id:
          format: uuid
          type: string
        person_id:
          format: uuid
          type: string
      required:
      - person_id
      - source_id
      - token_MetaTradeAPI
      type: object
    AccountUpdate:
      example:
        token_MetaTradeAPI: token_MetaTradeAPI
        currency: currency
        status: ACTIVE
      properties:
        currency:
          type: string
        token_MetaTradeAPI:
          type: string
        status:
          enum:
          - ACTIVE
          - DEACTIVATED
          type: string
      type: object
    Source:
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        platform: platform
        status: ACTIVE
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        platform:
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        status:
          enum:
          - ACTIVE
          - DEACTIVATED
          type: string
      type: object
    SourceCreate:
      example:
        name: name
        platform: platform
        token: token
      properties:
        name:
          type: string
        platform:
          type: string
        token:
          type: string
      required:
      - name
      - platform
      - token
      type: object
    SourceUpdate:
      example:
        name: name
        platform: platform
        token: token
        status: ACTIVE
      properties:
        name:
          type: string
        platform:
          type: string
        token:
          type: string
        status:
          enum:
          - ACTIVE
          - DEACTIVATED
          type: string
      type: object
    Transaction:
      example:
        amount: 0.08008281904610115
        account_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        updated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        source_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        direction: BUY
      properties:
        id:
          format: uuid
          type: string
        amount:
          format: double
          minimum: 0
          type: number
        direction:
          enum:
          - BUY
          - SELL
          type: string
        account_id:
          format: uuid
          type: string
        source_id:
          format: uuid
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
      type: object
    TransactionCreate:
      example:
        amount: 0.08008281904610115
        account_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        source_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        direction: BUY
      properties:
        amount:
          format: double
          minimum: 0
          type: number
        direction:
          enum:
          - BUY
          - SELL
          type: string
        account_id:
          format: uuid
          type: string
        source_id:
          format: uuid
          type: string
      required:
      - account_id
      - amount
      - direction
      - source_id
      type: object
    TransactionUpdate:
      properties:
        amount:
          format: double
          minimum: 0
          type: number
        direction:
          enum:
          - BUY
          - SELL
          type: string
        source_id:
          format: uuid
          type: string
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http

